
CREATE TABLE employee (
    employee_id INT PRIMARY KEY,
    department_id INT
);
INSERT INTO employee (employee_id, department_id)
VALUES
(1, 1),
(2, 2),
(3, 2);
CREATE TABLE salary (
    id INT PRIMARY KEY,
    employee_id INT,
    amount DECIMAL(10, 2),
    pay_date DATE,
    FOREIGN KEY (employee_id) REFERENCES employee(employee_id)
);
INSERT INTO salary (id, employee_id, amount, pay_date)
VALUES
(1, 1, 9000, '2017-03-31'),
(2, 2, 6000, '2017-03-31'),
(3, 3, 10000, '2017-03-31'),
(4, 1, 7000, '2017-02-28'),
(5, 2, 6000, '2017-02-28'),
(6, 3, 8000, '2017-02-28');
WITH CTE AS (
SELECT s.employee_id,s.amount,DATE_FORMAT(s.pay_date,'%Y-%M') AS paymonth,
 e.department_id, 
 AVG(s.amount) OVER(PARTITION BY DATE_FORMAT(s.pay_date,'%Y-%M'))AS company_avg,
 AVG(s.amount)OVER(PARTITION BY e.department_id ,DATE_FORMAT(s.pay_date,'%Y-%M'))AS dept_avg
FROM salary s
LEFT JOIN employee e
on s.employee_id=e.employee_id)

SELECT DISTINCT paymonth,department_id,
 CASE WHEN company_avg<dept_avg THEN 'HIGHER' 
 WHEN company_avg=dept_avg THEN 'SAME' 
 ELSE 'LOWER' END AS comparison FROM CTE; 
